// app/styles/responsive.scss

// Ensure images and videos are responsive by default
img,
video {
  max-width: 100%;
  height: auto;
}

// Media queries for general mobile screens (up to md breakpoint / 768px)
@media (max-width: 768px) {
  // Reduce header padding. The header element in Header.tsx has classes "flex items-center p-5".
  // We need a selector specific enough to target it without being overly fragile.
  // Assuming the <header> tag is unique enough or has a specific parent if needed.
  // For now, targeting based on its current classes and tag.
  body > div#root > header.flex.items-center.p-5, // More specific if #root is the immediate parent in final DOM
  header.p-5.border-b { // A common pattern for headers
    padding-left: 1rem;   // Was p-5 (1.25rem) -> px-4
    padding-right: 1rem;  // Was p-5 (1.25rem) -> px-4
    padding-top: 0.75rem;    // Was p-5 (1.25rem) -> py-3
    padding-bottom: 0.75rem; // Was p-5 (1.25rem) -> py-3
  }

  /* Assuming .MarkdownContent is globally available or this file is processed in a way that allows targeting it */
  :global(.MarkdownContent) { // Use :global if needed, or adjust selector if MarkdownContent is hashed by CSS Modules build
    line-height: 1.5;

    > *:not(:last-child) {
      margin-block-end: 12px;
    }

    :is(h1, h2, h3, h4, h5, h6) {
      margin-block-start: 18px;
      margin-block-end: 12px;
      line-height: 1.2;
    }

    p:not(:last-of-type) {
      margin-block-end: 12px;
    }

    :is(ul, ol) {
      margin-block-end: 12px;
      padding-left: 1.5em;
    }

    li + li {
      margin-block-start: 6px;
    }

    hr {
      margin: 16px 0;
    }
  }

  // Settings Page - ProfileTab Avatar
  // Targets the avatar container: <div class="w-24 h-24 ...">
  :global(.dark) :global(.w-24.h-24.rounded-full.overflow-hidden.bg-gray-800\/50),
  :global(.w-24.h-24.rounded-full.overflow-hidden.bg-gray-100) {
    width: 4rem; // equivalent to w-16
    height: 4rem; // equivalent to h-16
  }

  // Targets the placeholder icon: <div class="i-ph:robot-fill w-16 h-16 ...">
  :global(.dark) :global(.i-ph\:robot-fill.w-16.h-16.text-gray-500),
  :global(.i-ph\:robot-fill.w-16.h-16.text-gray-400) {
    width: 3rem; // equivalent to w-12
    height: 3rem; // equivalent to h-12
  }

  // Targets the camera upload icon on hover: <div class="i-ph:camera-plus w-6 h-6 ...">
  // This might already be small enough (1.5rem), but if consistent scaling is applied:
  :global(.group:hover .i-ph\:camera-plus.w-6.h-6) {
    width: 1.25rem; // equivalent to w-5
    height: 1.25rem; // equivalent to h-5
  }

  // Target inputs and textareas styled like those in ProfileTab.tsx
  // These have large left padding for an icon (pl-11) and generous vertical padding (py-2.5)
  // Assumes these specific padding classes are primary identifiers.
  :global(input.pl-11.pr-4.py-2\.5), // Escaped dot for py-2.5
  :global(textarea.pl-11.pr-4.py-2\.5) {
    padding-top: 0.5rem;    // py-2
    padding-bottom: 0.5rem; // py-2
    padding-left: 2rem;     // pl-8 (assuming inner icon also scales slightly or needs less space)
    padding-right: 0.75rem; // pr-3
    font-size: 0.875rem; // text-sm
  }

  :global(textarea.pl-11.pr-4.py-2\.5.h-32) { // Specifically target the textarea height
    height: 6rem; // h-24 (reduced from h-32)
  }

  // For standard select elements (like in SettingsTab.tsx: px-3 py-2 text-sm)
  // These are already quite compact. We ensure they don't become larger.
  // If they were larger, rules similar to inputs would apply.
  // For now, just a comment placeholder, as their existing style is likely fine.
  // :global(select.px-3.py-2.text-sm) {
  //   // font-size: 0.875rem; // already text-sm
  //   // padding: 0.375rem 0.625rem; // slightly less than py-2 px-3 if needed
  // }

  // Application Header Title (from Header.tsx, originally text-2xl)
  // Attempting to target the span holding "Application Title"
  // This selector assumes the structure `header > div > a > span`
  // and the specific classes on the header.
  :global(header.p-5.border-b div.flex.items-center.gap-2 a span) {
    font-size: 1.25rem; // text-xl equivalent
  }

  // Dialog Titles (from Dialog.tsx, originally text-lg via DialogTitle component)
  // Targeting the specific classes applied by the DialogTitle component.
  // This selector is based on: classNames('text-lg font-medium text-bolt-elements-textPrimary ...')
  // It's brittle. A custom class on DialogTitle would be better.
  :global(h2[class*="text-lg"][class*="font-medium"][class*="text-bolt-elements-textPrimary"]) {
    font-size: 1rem; // text-base equivalent
    // Ensure line-height adjusts if it was fixed or too large
    line-height: 1.4; // Example, adjust as needed
  }
}

// For very small screens (e.g., iPhone SE - 320px, and up to ~425px)
@media (max-width: 425px) {
  body > div#root > header.flex.items-center.p-5,
  header.p-5.border-b {
    padding-left: 0.75rem;   // px-3
    padding-right: 0.75rem;  // px-3
    padding-top: 0.5rem;     // py-2
    padding-bottom: 0.5rem;  // py-2
  }

  // Placeholder for other very-small-screen adjustments
  // .mobile-padding-adjustment {
  //   padding-left: 0.5rem;
  //   padding-right: 0.5rem;
  // }

  :global(.MarkdownContent) { // Use :global if needed
    line-height: 1.45;

    > *:not(:last-child) {
      margin-block-end: 10px;
    }

    :is(h1, h2, h3, h4, h5, h6) {
      margin-block-start: 16px;
      margin-block-end: 10px;
      line-height: 1.15;
    }

    p:not(:last-of-type) {
      margin-block-end: 10px;
    }

    :is(ul, ol) {
      margin-block-end: 10px;
      padding-left: 1.25em;
    }

    li + li {
      margin-block-start: 4px;
    }

    hr {
      margin: 12px 0;
    }
  }

  // Settings Page - ProfileTab Avatar
  :global(.dark) :global(.w-24.h-24.rounded-full.overflow-hidden.bg-gray-800\/50),
  :global(.w-24.h-24.rounded-full.overflow-hidden.bg-gray-100) {
    width: 3.5rem; // equivalent to w-14
    height: 3.5rem; // equivalent to h-14
  }

  // Placeholder icon inside avatar
  :global(.dark) :global(.i-ph\:robot-fill.w-16.h-16.text-gray-500),
  :global(.i-ph\:robot-fill.w-16.h-16.text-gray-400) {
    width: 2.5rem; // equivalent to w-10
    height: 2.5rem; // equivalent to h-10
  }

  // Camera upload icon on hover
  :global(.group:hover .i-ph\:camera-plus.w-6.h-6) {
    width: 1.125rem; // text-lg equivalent, smaller than w-5
    height: 1.125rem;
  }

  :global(input.pl-11.pr-4.py-2\.5),
  :global(textarea.pl-11.pr-4.py-2\.5) {
    padding-top: 0.375rem;    // py-1.5
    padding-bottom: 0.375rem; // py-1.5
    padding-left: 1.75rem;   // pl-7 (further reduction for icon space)
    padding-right: 0.5rem;   // pr-2
    // font-size: 0.875rem; // text-sm (already set above)
  }

  :global(textarea.pl-11.pr-4.py-2\.5.h-32) {
    height: 5rem; // h-20
  }

  // Switch component scaling (original: h-6 w-11, thumb: h-5 w-5)
  // Targeting Radix UI structure if direct classes are not stable
  :global([role="switch"][class*="h-6"][class*="w-11"]) {
    width: 2.5rem;  // w-10
    height: 1.25rem; // h-5
  }
  :global([role="switch"][class*="h-6"][class*="w-11"] > span[class*="h-5"][class*="w-5"]) { // Thumb
    width: 1rem;     // w-4
    height: 1rem;    // h-4
    // Adjust transform for new size: data-[state=checked]:translate-x-[1.25rem] approx
    // This transform is complex to override precisely without knowing exact CVA output
    // or modifying the component. For now, we scale the container and thumb.
    // The data-state-checked transform might need JS adjustment or more complex CSS if this isn't enough.
  }
   // For Switch Primitive Thumb's data-[state=checked]:translate-x-[1.375rem]
   // Original: h-6 w-11 (thumb h-5 w-5, moves 1.375rem which is 22px from initial 0.5 translate)
   // New: h-5 w-10 (thumb h-4 w-4, moves ??)
   // If switch is w-10 (2.5rem = 40px), thumb is w-4 (1rem = 16px)
   // Max translate: 40px - 16px - (initial_offset * 2)
   // Initial offset is 0.5 * new_thumb_size? Or related to new_switch_padding?
   // The original translate-x-0.5 means 2px. New switch is 20px height.
   // Let's assume new initial offset is small (e.g., 1px or 2px).
   // Translate needed: 40px (w-10) - 16px (w-4) - (2px*2) = 20px = 1.25rem
  :global([role="switch"][class*="h-6"][class*="w-11"] > span[class*="h-5"][class*="w-5"][data-state="checked"]) {
    transform: translateX(1.125rem); // Approx for w-10, thumb w-4. (2.5rem - 1rem - 0.125rem*2 = 1.25rem). Original was 1.375rem
  }
   :global([role="switch"][class*="h-6"][class*="w-11"] > span[class**="h-5"][class*="w-5"][data-state="unchecked"]) {
    transform: translateX(0.125rem); // Approx for new thumb initial pos. Original was 0.5 (2px for h-6)
  }

  // Application Header Title
  :global(header.p-5.border-b div.flex.items-center.gap-2 a span) {
    font-size: 1.125rem; // text-lg equivalent
  }

  // Dialog Titles
  :global(h2[class*="text-lg"][class*="font-medium"][class*="text-bolt-elements-textPrimary"]) {
    font-size: 0.875rem; // text-sm equivalent
    line-height: 1.3; // Example
  }
}
